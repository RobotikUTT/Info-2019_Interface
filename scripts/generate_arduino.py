#!/usr/bin/python3

import os
from xml.etree import ElementTree

interface_dir = os.path.dirname(os.path.realpath(__file__)) + "/../"

output_file = interface_dir + "arduino/protocol.gen.hpp"
input_file = interface_dir + "can/frames.xml"

root = ElementTree.parse(input_file).getroot()

content = [
	"// PROTOCOL (frame_id, param_length, [params sizes]) --> generated by python"
]
contents = []

for frame in root:
	name = frame.attrib["name"]
	id = int(frame.attrib["id"])
	params = []

	for param in frame:
		if param.tag == "description":
			continue

		param_name = param.attrib["name"]
		param_size = 1 if param.tag == "byte" else 2

		params.append((param_name, param_size))

	data = "{{{}, {}}}".format(
		id,
		", ".join([str(len(params))] + [str(size) for name, size in params] + ["0" for i in range(8 - len(params))])
	)
	contents.append(data)

	content.append("const uint8_t {}[] = {};"
		.format(name.upper(), data))

content.append("const uint8_t FRAMES[][10] = {{\n\t{}\n}};".format(",\n\t".join(contents)))
content.append("const int FRAMES_LENGTH = {};".format(len(contents)))
content.append("// END OF PROTOCOL")

file = open(output_file, "w")
file.write("\n".join(content))
file.write("\n")
file.close()
